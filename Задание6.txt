#include <iostream>
#include <vector>
#include <chrono>
#include <random>
#include <string>

struct KP {
    uint64_t timestamp; // Метка времени (UTC)
    int number; // Номер КП
    int state; // Состояние
    int size; // Размер значения КП
    int type; // Тип КП
    std::string value; // Значение КП
};

std::string generateRandomString(int length) {
    const char charset[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    std::string result;
    for (int i = 0; i < length; ++i) {
        result += charset[rand() % (sizeof(charset) - 1)];
    }
    return result;
}

int main() {
    std::srand(static_cast<unsigned int>(std::time(nullptr))); // Инициализация генератора случайных чисел

    std::vector<KP> kps;
    int numEntries;

    std::cout << "Введите количество записей для генерации: ";
    std::cin >> numEntries;

    for (int i = 0; i < numEntries; ++i) {
        KP kp;

        // Получение текущей метки времени
        kp.timestamp = std::chrono::duration_cast<std::chrono::seconds>(
            std::chrono::system_clock::now().time_since_epoch()).count();

        // Генерация случайных данных
        kp.number = i + 1; // Номер КП
        kp.state = rand() % 5; // Состояние: случайно от 0 до 4
        kp.size = rand() % 10 + 1; // Случайный размер значения от 1 до 10
        kp.type = 1; // Тип: текст

        // Случайное значение
        kp.value = generateRandomString(kp.size);

        // Добавляем объект kp в вектор kps
        kps.push_back(kp);
    }

    // Вывод данных КП
    for (const auto& kp : kps) {
        std::cout << "Временная метка: " << kp.timestamp 
                  << ", Число: " << kp.number 
                  << ", Состояние: " << kp.state 
                  << ", Тип: " << kp.type 
                  << ", Значение: " << kp.value 
                  << std::endl;
    }

    return 0;
}